# -*- coding: utf-8 -*-
"""
Created on Wed Aug  4 11:51:11 2021

@author: talha
"""
#libaries
from tensorflow.keras.preprocessing.image import ImageDataGenerator

#seed
seed = 42 

#contains original images 

original_image_path = "../2-Data/"

import os 

#check directory is exist
if isinstance(original_image_path, str): #Image path is a string 
    if os.path.exists(original_image_path):
        print ("Path is exist")
    else:
        raise FileNotFoundError('Image is not found on your system')    


#contains the image which is generated by image generator 
processed_image_path ="../4-Dataset_Class/datagenerator_augmented_image"
if isinstance(processed_image_path, str): #Image path is a string 
    if os.path.exists(processed_image_path):
        print ("Path is exist")
    else:
        raise FileNotFoundError('datagenerator_augmented_image is not found on your system')   
        

#list the image_name
imgs_name = os.listdir(original_image_path+"original_images") #Read the image name inside the path
img_array = []        

# CV2 IMREAD  
import cv2
original_images = []
for img in imgs_name:    
    original_images.append(cv2.cvtColor(cv2.imread(os.path.join(original_image_path+"original_images", img)),cv2.COLOR_BGR2RGB)) 

#generated image property 
data_gen_args = dict(rotation_range=30,
                    width_shift_range=0.2,
                    height_shift_range=0.2,
                    shear_range=0.1,
                    zoom_range=0.2,
                    horizontal_flip=True,
                    fill_mode='nearest')


image_datagen = ImageDataGenerator(**data_gen_args)


#directory properties

image_generator = image_datagen.flow_from_directory(
        original_image_path,
        classes = ["original_images"], #path name
        class_mode = None,
        color_mode =  "rgb",
        target_size = (600,600),
        batch_size = 3, #in each generate how many sample do you want to take
        save_to_dir = processed_image_path,
        save_prefix  = "processed",
        shuffle = False,
        seed = seed)

count = 0
img_list = []
for img in image_generator:
        count = count +1
        img = img.astype("uint8")
        img_list.append(img)
        
        if  count > 7:    
            break



import sys
sys.path.append('../3-Utils/')
from visualize_data import visualize

visualize(original_images, img_list,0)
visualize(original_images, img_list,1)
visualize(original_images, img_list,2)


