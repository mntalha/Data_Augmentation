Author :  Talha Kilic <mntalha>

<September 9 2021>

Purpose : Find optimum ways in terms of simplicity in Data Augmentation

This repository is created to compare 3 different pythonic way and show the output diferences .



# ImageDataGenerator
shows how ImageDataGenerator is used basically in Keras and explains with examples.

### How To

[img_generator.py](https://github.com/mntalha/ImageDataGenerator/tree/main/code) is the main function that contains image ImageDataGenerator object

[img](https://github.com/mntalha/ImageDataGenerator/tree/main/img) file contains 2 seperate directories .
#####
Original contains the source images
Processed has generated images.

# Requirements

- keras.preprocessing.image

# Example Usage

```python
#libaries
from keras.preprocessing.image import ImageDataGenerator

#seed
seed = 42

#contains original images

original_image_path = "../img/"

#contains the image which is generated by image generator
processed_image_path = original_image_path + "processed"


#generated image property
data_gen_args = dict(rotation_range=0.1,
                    width_shift_range=0.1,
                    height_shift_range=0.1,
                    shear_range=0.1,
                    zoom_range=0.1,
                    horizontal_flip=True,
                    fill_mode='nearest')


image_datagen = ImageDataGenerator(**data_gen_args)


#directory properties

image_generator = image_datagen.flow_from_directory(
        original_image_path,
        classes = ["original"], #path name
        class_mode = None,
        color_mode =  "rgb",
        target_size = (256,256),
        batch_size = 3, #in each generate how many sample do you want to take
        save_to_dir = processed_image_path,
        save_prefix  = "processed",
        seed = seed)

count = 0
for img in image_generator:
        count = count +1
        if  count > 10:    
            break
```

**for any problem , don't hesitate to contact me from** [Linkedin](https://www.linkedin.com/in/mntalhakilic/) :+1: :+1:
